[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/unite.vim'
hook_add = '''
    let g:unite_enable_start_insert=1
    let g:unite_source_history_yank_enable =1
    let g:unite_source_file_mru_limit = 200
    nnoremap <silent> <space>ub :<C-u>Unite buffer<CR>
    nnoremap <silent> <space>uf :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
    nnoremap <silent> <space>ur :<C-u>Unite -buffer-name=register register<CR>
    nnoremap <silent> <space>uu :<C-u>Unite file_mru buffer<CR>
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = ['unite.vim']

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
    autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
    map <C-n> :NERDTreeToggle<CR>
    let g:NERDTreeShowBookmarks=1
    let g:NERDTreeLimitedSyntax = 1
    let g:NERDTreeFileExtensionHighlightFullName = 1
    let g:NERDTreeExactMatchHighlightFullName = 1
    let g:NERDTreePatternMatchHighlightFullName = 1
    let g:NERDTreeHighlightFolders = 1 
    let g:NERDTreeHighlightFoldersFullName = 1 
'''



[[plugins]]
repo = 'ujihisa/unite-colorscheme'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'

[[plugins]]
repo = 'davidhalter/jedi-vim'
hook_add = 'autocmd FileType python setlocal completeopt-=preview'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline-themes']
hook_add = '''
set ambiwidth=double
let g:airline_theme = 'badwolf'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline#extensions#tabline#buffer_idx_mode = 1
let g:airline#extensions#whitespace#mixed_indent_algo = 1
let g:airline_detect_modified=1
let g:airline_detect_paste=1
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'MattesGroeger/vim-bookmarks'
hook_add = '''
let g:bookmark_highlight_lines = 1
let g:bookmark_sign = '>>'
let g:bookmark_annotation_sign = '##'
let g:bookmark_no_default_key_mappings = 1
highlight BookmarkSign           guifg=#FF7C6C
highlight BookmarkAnnotationSign guifg=#FF7C6C
highlight BookmarkLine           guifg=#FF7C6C
highlight BookmarkAnnotationLine guifg=#FF7C6C

function! BookmarkMapKeys()
  nmap mm  :BookmarkToggle<CR>
  nmap mi  :BookmarkAnnotate<CR>
  nmap mn  :BookmarkNext<CR>
  nmap mp  :BookmarkPrev<CR>
  nmap mo  :BookmarkShowAll<CR>
  nmap mc  :BookmarkClear<CR>
  nmap mx  :BookmarkClearAll<CR>
  nmap mkk :BookmarkMoveUp<CR>
  nmap mjj :BookmarkMoveDown<CR>
endfunction

function! BookmarkUnmapKeys()
  unmap mm
  unmap mi
  unmap mn
  unmap mp
  unmap mo
  unmap mc
  unmap mx
  unmap mkk
  unmap mjj
endfunction
'''


[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'simeji/winresizer'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
    let g:quickrun_config = {
        \ "_" : {
          \ 'runner': 'vimproc',
          \ 'runner/vimproc/updatetime' : 60,
          \ 'outputter/buffer/split'  : ':rightbelow 8sp',
          \ 'outputter/buffer/info'  : 1,
          \ 'outputter/buffer/close_on_empty'  : 1,
          \ 'outputter/error/success' : 'buffer',
          \ 'outputter/error/error' : 'quickfix',
          \ 'outputter' : 'error',
          \ 'hook/time/enable ' : 1,
          \ 'hook/time/format': '*** time: %g seconds ***',
          \ 'hook/output_encode/enable' : 1,
          \ 'hook/output_encode/encoding' : 'utf-8:&encoding',
          \ 'hook/shabadoubi_touch_henshin/enable' : 1,
          \ 'hook/shabadoubi_touch_henshin/wait' : 20,
       \ },
    \}
    au FileType qf nnoremap <silent><buffer>q :quit<CR>
    au FileType bf nnoremap <silent><buffer>q :quit<CR>
    set splitbelow
    noremap qr :QuickRun <CR>
    nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"
    autocmd BufEnter *           :call BookmarkMapKeys()
    autocmd BufEnter NERD_tree_* :call BookmarkUnmapKeys()
'''


[[plugins]]
repo = 'osyo-manga/unite-quickfix'

[[plugins]]
repo = 'osyo-manga/shabadou.vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tiagofumo/vim-nerdtree-syntax-highlight'

[[plugins]]
repo = 'Shougo/neocomplcache.vim'
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_add = '''
    imap <C-k>     <Plug>(neosnippet_expand_or_jump)
    smap <C-k>     <Plug>(neosnippet_expand_or_jump)
    xmap <C-k>     <Plug>(neosnippet_expand_target)

    " SuperTab like snippets behavior.
    " Note: It must be "imap" and "smap".  It uses <Plug> mappings.
    imap <C-k>     <Plug>(neosnippet_expand_or_jump)
    "imap <expr><TAB>
    " \ pumvisible() ? "\<C-n>" :
    " \ neosnippet#expandable_or_jumpable() ?
    " \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
    smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
    \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

    " For conceal markers.
    if has('conceal')
      set conceallevel=2 concealcursor=niv
    endif
'''


[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
    let g:webdevicons_enable = 1
    let g:webdevicons_enable_nerdtree = 1
    let g:webdevicons_enable_unite = 1
    let g:webdevicons_enable_airline_tabline = 1
    let g:webdevicons_enable_airline_statusline = 1
    let g:WebDevIconsUnicodeDecorateFileNodes = 1
    let g:WebDevIconUnicodeDecorateFolderNodes = 1
    let g:WebDevIconsUnicodeGlyphDoubleWidth = 1
    let g:webdevicons_conceal_nerdtree_brackets = 1
    let g:WebDevIconsNerdTreeAfterGlyphPadding = ''

    let g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol = 'Æ›'
    let g:WebDevIconsUnicodeByteOrderMarkerDefaultSymbol = '/'
    let g:DevIconsEnableFoldersOpenClose = 1
    let g:WebDevIconsUnicodeDecorateFolderNodesExactMatches = 1
    autocmd Filetype nerdtree set conceallevel=3
    autocmd Filetype nerdtree set concealcursor=nvic
    autocmd FileType nerdtree setlocal nolist
    " set updatetime=50
'''




